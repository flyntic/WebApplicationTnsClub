{"ast":null,"code":"import _asyncToGenerator from \"C:/tennisclub/WebApplicationTnsClub/WebApplicationTnsClub/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\n//import { FormsModule } from '@angular/forms';\nimport { AsyncPipe } from \"@angular/common\";\nimport { AppAuthLogoutItem, AppAuthHiItem } from './../app.auth.menu';\n//import { ChangeDetectorRef } from '@angular/core';\n//import { Subscription } from 'rxjs';\n;\n//import { FormGroup } from '@angular/forms';\n//import { tap } from 'rxjs/internal/operators/tap';\nlet AuthenticatedComponent = class AuthenticatedComponent {\n  // user: any;\n  //  auth: boolean = false;\n  //  isAuthenticated: boolean;\n  constructor(authService) {\n    //  this.username$ = this.authService.username$;\n    /*    this.auth.$username.subscribe(async (data) =>\n        {\n            console.log(\"auth!!!dfdf\" + data);\n           await this.update();\n            console.log(\"auth!!!dfdf555\" + data);\n          //  this.loginUsername();\n        });*/\n    this.authService = authService;\n    //  { this.$username = this.auth.$username; }\n    this.logouttext = AppAuthLogoutItem['text'];\n    this.hitext = AppAuthHiItem['text'];\n    this.logoutpng = AppAuthLogoutItem['icon'];\n  }\n  ngOnInit() {\n    console.log(\"auth_comp\");\n    this.authService.getUser().subscribe(data => {\n      this.username$ = data['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'];\n      console.log(\"hhh\");\n    });\n    // this.user$.subscribe(() => this.isAuthenticated$=true);\n    // this.isAuthenticated$ = this.authService.isAuthenticated$;\n    // this.username$ = this\n    //   this.authService.username$.subscribe(() => { this.username$ = this.authService.username$; console.log(\"get \" + this.username$) });\n    /*  this.authService.getUser().subscribe(data => {\n          this.user = data;\n          if (this.user.login !== false) { this.auth = true; }\n      });\n      */\n    //    this.authService.isAuthenticated().subscribe(value => {\n    //         this.isAuthenticated = value;\n    //     });\n  }\n  // form: FormGroup;\n  __ngOnInit() {\n    return _asyncToGenerator(function* () {})();\n  } //    await this.auth.getUser().then(() => { this.update(); });\n  //  this.auth.$username.subscribe((data) => { console.log(\"authehn!!!\" + data); this.$username = of(data); this.update(data); }));//  this.auth.$username.subscribe((data) => { console.log(\"authehnraeega!!!\" + data); this._username = data; });\n  //\n  //  this.$username = this.form.valueChanges.pipe(tap(value => { console.log(\"frormmm\") }))\n  // this.update();\n  /*  async update() {\n        console.log(\"updater\" );\n        this._ngZone.run(() => {//console.log(\"updatefgf\" + data);\n            this.$username = this.auth.$username;//of(\"sljdsldkjsl\");// of(data);\n          //  this._username = \"rgdg\";\n          //  console.log(\"updatefgf\" + this.$username);\n        });\n    }\n    */\n  /**/\n  /*   private subscription?: Subscription;\n     private lastValue?: any;\n     ngOnDestroy() {\n         if (this.subscription) {\n             this.subscription.unsubscribe();\n         }\n     }\n         transform (observable: Observable<string>): string | undefined {\n         if (!this.$username) {\n             this.$username = observable;\n             this.subscription = observable.subscribe(value => {\n                 this.lastValue = value;\n                 this.ref.markForCheck();\n             });\n         }\n         return this.lastValue;\n     }*/\n  loginUsername() {\n    return _asyncToGenerator(function* () {})();\n  } //      this.$username = of(this.auth.getUserName());\n  //  await this.auth.getUser();\n  ///  this.auth.username$.subscribe((data) => { console.log(\"authehn!!!\" + data); this.username$ = of(this.auth.getUserName()); });\n  //  const str = await this.auth.getUserName();//.toPromise();\n  //  console.log(\"authehn2!!!\" + str);//of(this.$username)\n  //  this.update();\n  //this.auth.username$.subscribe((data) => { console.log(\"authehn2!!!\" + data); this.username$ = of(this.auth.getUserName()); });\n  logout() {\n    //  return this.auth.logout();\n  }\n};\nAuthenticatedComponent = __decorate([Component({\n  selector: 'app-authenticated',\n  imports: [AsyncPipe],\n  templateUrl: './authenticated.component.html',\n  styleUrls: ['./authenticated.component.css']\n  //  providers: [AuthService, AuthGuard],\n  //  standalone:true\n})], AuthenticatedComponent);\nexport { AuthenticatedComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}