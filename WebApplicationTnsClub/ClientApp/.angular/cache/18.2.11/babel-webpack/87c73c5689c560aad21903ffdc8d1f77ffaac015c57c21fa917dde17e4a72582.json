{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { visibilityPopup } from '../../services/animations.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/menu.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../popup-menu/popup-menu.component\";\nconst _c0 = (a0, a1) => ({\n  \"vertical-menu\": a0,\n  \"active\": a1\n});\nconst _c1 = a0 => ({\n  \"vertical-menu\": a0\n});\nfunction MenuItemComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"span\", 6);\n    i0.ɵɵelement(2, \"button\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.parentIsPopup ? \"dropright\" : \"dropdown\");\n  }\n}\nfunction MenuItemComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"span\", 6);\n    i0.ɵɵelement(2, \"button\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.mouseInItem || ctx_r0.mouseInPopup ? \"dropleft\" : \"dropdown\");\n  }\n}\nfunction MenuItemComponent_spa_popup_menu_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"spa-popup-menu\", 8);\n    i0.ɵɵlistener(\"mouseleave\", function MenuItemComponent_spa_popup_menu_7_Template_spa_popup_menu_mouseleave_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onPopupMouseLeave($event));\n    })(\"mouseenter\", function MenuItemComponent_spa_popup_menu_7_Template_spa_popup_menu_mouseenter_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onPopupMouseEnter($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"left\", ctx_r0.popupLeft + \"px\")(\"top\", ctx_r0.popupTop + \"px\");\n    i0.ɵɵproperty(\"@visibilityPopup\", undefined)(\"menu\", ctx_r0.item.submenu)(\"ngClass\", i0.ɵɵpureFunction1(7, _c1, ctx_r0.menuService.isVertical));\n  }\n}\nexport let MenuItemComponent = /*#__PURE__*/(() => {\n  class MenuItemComponent {\n    constructor(menuService, router, el, renderer) {\n      this.menuService = menuService;\n      this.router = router;\n      this.el = el;\n      this.renderer = renderer;\n      this.parentIsPopup = true;\n      this.mouseInPopup = false;\n      this.mouseInItem = false;\n      this.popupLeft = 0;\n      this.popupTop = 42;\n      this.isActiveRoute = false;\n    }\n    ngOnInit() {\n      this.checkingActiveRoute(this.router.url);\n      this.router.events.subscribe(event => {\n        if (event instanceof NavigationEnd) {\n          this.checkingActiveRoute(event.url);\n        }\n      });\n    }\n    checkingActiveRoute(route) {\n      this.isActiveRoute = route === this.item.route;\n    }\n    onPopupMouseLeave(event) {\n      if (!this.menuService.isVertical) {\n        this.mouseInPopup = false;\n      }\n    }\n    onPopupMouseEnter(event) {\n      if (!this.menuService.isVertical) {\n        this.mouseInPopup = true;\n      }\n    }\n    onMouseLeave(event) {\n      if (!this.menuService.isVertical) {\n        this.mouseInItem = false;\n      }\n    }\n    onMouseEnter() {\n      if (!this.menuService.isVertical) {\n        if (this.item.submenu) {\n          this.mouseInItem = true;\n          if (this.parentIsPopup) {\n            this.popupLeft = 160;\n            this.popupTop = 0;\n          }\n        }\n      }\n    }\n    onClick(event) {\n      event.stopPropagation();\n      if (this.item.submenu) {\n        if (this.menuService.isVertical) {\n          this.mouseInPopup = !this.mouseInPopup;\n        }\n      } else if (this.item.route) {\n        const newEvent = new MouseEvent('mouseleave', {\n          bubbles: true\n        });\n        //   this.renderer.selectRootElement(this.el.nativeElement, 'dispatchEvent', [newEvent]);\n        this.router.navigate([this.item.route]);\n      }\n    }\n    static {\n      this.ɵfac = function MenuItemComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MenuItemComponent)(i0.ɵɵdirectiveInject(i1.MenuService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: MenuItemComponent,\n        selectors: [[\"spa-menu-item\"]],\n        hostVars: 2,\n        hostBindings: function MenuItemComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"mouseleave\", function MenuItemComponent_mouseleave_HostBindingHandler($event) {\n              return ctx.onMouseLeave($event);\n            })(\"mouseenter\", function MenuItemComponent_mouseenter_HostBindingHandler() {\n              return ctx.onMouseEnter();\n            })(\"click\", function MenuItemComponent_click_HostBindingHandler($event) {\n              return ctx.onClick($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"parent-for-popup\", ctx.parentIsPopup);\n          }\n        },\n        inputs: {\n          item: \"item\",\n          parentIsPopup: \"parentIsPopup\"\n        },\n        decls: 8,\n        vars: 9,\n        consts: [[1, \"menu-item\", 3, \"ngClass\"], [1, \"icon\"], [1, \"menu-icon\", 3, \"src\"], [1, \"menu-text\"], [4, \"ngIf\"], [3, \"menu\", \"ngClass\", \"left\", \"top\", \"mouseleave\", \"mouseenter\", 4, \"ngIf\"], [3, \"ngClass\"], [1, \"dropdown-toggle\"], [3, \"mouseleave\", \"mouseenter\", \"menu\", \"ngClass\"]],\n        template: function MenuItemComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"span\", 1);\n            i0.ɵɵelement(2, \"img\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"span\", 3);\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(5, MenuItemComponent_span_5_Template, 3, 1, \"span\", 4)(6, MenuItemComponent_span_6_Template, 3, 1, \"span\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(7, MenuItemComponent_spa_popup_menu_7_Template, 1, 9, \"spa-popup-menu\", 5);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(6, _c0, ctx.menuService.isVertical, ctx.isActiveRoute));\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"src\", ctx.item.icon, i0.ɵɵsanitizeUrl);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.item.text);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.item.submenu && !ctx.menuService.isVertical);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.item.submenu && ctx.menuService.isVertical);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.mouseInPopup || ctx.mouseInItem);\n          }\n        },\n        dependencies: [i3.NgClass, i3.NgIf, i4.PopupMenuComponent],\n        styles: [\"div.vertical-menu[_nghost-%COMP%]{font-size:10px}.vertical-menu[_nghost-%COMP%]   .menu-item[_ngcontent-%COMP%]{font-size:12px;padding:3px 15px 3px 8px}.menu-icon[_ngcontent-%COMP%]{height:30px;width:30px;margin:10px}.menu-text[_ngcontent-%COMP%]{font-size:15px}.active[_ngcontent-%COMP%]{outline:none;transform:scale(1.05);background-color:#f73a3acc}.vertical-menu.in-popup[_nghost-%COMP%]{padding-left:14px}span[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:3px 0 3px 5px;padding:0;background:transparent;border:0}span.dropdown[_ngcontent-%COMP%], span.dropleft[_ngcontent-%COMP%], span.dropright[_ngcontent-%COMP%]{float:right}span.dropdown[_ngcontent-%COMP%] > button.dropdown-toggle[_ngcontent-%COMP%]:after{border-top-color:#fff}span.dropright[_ngcontent-%COMP%] > button.dropdown-toggle[_ngcontent-%COMP%]:after{border-left-color:#fff}span.dropleft[_ngcontent-%COMP%] > button.dropdown-toggle[_ngcontent-%COMP%]:before{border-right-color:#fff}\"],\n        data: {\n          animation: [visibilityPopup]\n        }\n      });\n    }\n  }\n  return MenuItemComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}