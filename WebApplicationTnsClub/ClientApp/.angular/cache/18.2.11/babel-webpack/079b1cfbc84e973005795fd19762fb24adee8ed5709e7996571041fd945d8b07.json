{"ast":null,"code":"import _asyncToGenerator from \"C:/tennisclub/WebApplicationTnsClub/WebApplicationTnsClub/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//import { FormsModule } from '@angular/forms';\nimport { AsyncPipe } from \"@angular/common\";\nimport { AuthService } from '../../auth.service';\nimport { AppAuthLogoutItem, AppAuthHiItem } from './../app.auth.menu';\nimport { AuthGuard } from '../../auth-guard.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../auth.service\";\nimport * as i2 from \"@angular/common\";\n//import { Injectable } from '../../../../../node_modules/@angular/core/index';\n//import { ChangeDetectorRef } from '@angular/core';\n//import { Subscription } from 'rxjs';\n;\n//import { FormGroup } from '@angular/forms';\n//import { tap } from 'rxjs/internal/operators/tap';\n//Injectable()\nexport let AuthenticatedComponent = /*#__PURE__*/(() => {\n  class AuthenticatedComponent {\n    // user: any;\n    //  auth: boolean = false;\n    //  isAuthenticated: boolean;\n    constructor(authService) {\n      //  this.username$ = this.authService.username$;\n      /*    this.auth.$username.subscribe(async (data) =>\n          {\n              console.log(\"auth!!!dfdf\" + data);\n             await this.update();\n              console.log(\"auth!!!dfdf555\" + data);\n            //  this.loginUsername();\n          });*/\n      this.authService = authService;\n      //  { this.$username = this.auth.$username; }\n      this.logouttext = AppAuthLogoutItem['text'];\n      this.hitext = AppAuthHiItem['text'];\n      this.logoutpng = AppAuthLogoutItem['icon'];\n    }\n    ngOnInit() {\n      console.log(\"auth_comp\");\n      this.authService.getUser().subscribe(data => {\n        this.username$ = data['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'];\n        console.log(\"hhh\");\n      });\n      // this.user$.subscribe(() => this.isAuthenticated$=true);\n      // this.isAuthenticated$ = this.authService.isAuthenticated$;\n      // this.username$ = this\n      //   this.authService.username$.subscribe(() => { this.username$ = this.authService.username$; console.log(\"get \" + this.username$) });\n      /*  this.authService.getUser().subscribe(data => {\n            this.user = data;\n            if (this.user.login !== false) { this.auth = true; }\n        });\n        */\n      //    this.authService.isAuthenticated().subscribe(value => {\n      //         this.isAuthenticated = value;\n      //     });\n    }\n    // form: FormGroup;\n    __ngOnInit() {\n      return _asyncToGenerator(function* () {})();\n    } //    await this.auth.getUser().then(() => { this.update(); });\n    //  this.auth.$username.subscribe((data) => { console.log(\"authehn!!!\" + data); this.$username = of(data); this.update(data); }));//  this.auth.$username.subscribe((data) => { console.log(\"authehnraeega!!!\" + data); this._username = data; });\n    //\n    //  this.$username = this.form.valueChanges.pipe(tap(value => { console.log(\"frormmm\") }))\n    // this.update();\n    /*  async update() {\n          console.log(\"updater\" );\n          this._ngZone.run(() => {//console.log(\"updatefgf\" + data);\n              this.$username = this.auth.$username;//of(\"sljdsldkjsl\");// of(data);\n            //  this._username = \"rgdg\";\n            //  console.log(\"updatefgf\" + this.$username);\n          });\n      }\n      */\n    /**/\n    /*   private subscription?: Subscription;\n       private lastValue?: any;\n       ngOnDestroy() {\n           if (this.subscription) {\n               this.subscription.unsubscribe();\n           }\n       }\n           transform (observable: Observable<string>): string | undefined {\n           if (!this.$username) {\n               this.$username = observable;\n               this.subscription = observable.subscribe(value => {\n                   this.lastValue = value;\n                   this.ref.markForCheck();\n               });\n           }\n           return this.lastValue;\n       }*/\n    loginUsername() {\n      return _asyncToGenerator(function* () {})();\n    } //      this.$username = of(this.auth.getUserName());\n    //  await this.auth.getUser();\n    ///  this.auth.username$.subscribe((data) => { console.log(\"authehn!!!\" + data); this.username$ = of(this.auth.getUserName()); });\n    //  const str = await this.auth.getUserName();//.toPromise();\n    //  console.log(\"authehn2!!!\" + str);//of(this.$username)\n    //  this.update();\n    //this.auth.username$.subscribe((data) => { console.log(\"authehn2!!!\" + data); this.username$ = of(this.auth.getUserName()); });\n    logout() {\n      //  return this.auth.logout();\n    }\n    static {\n      this.ɵfac = function AuthenticatedComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AuthenticatedComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AuthenticatedComponent,\n        selectors: [[\"app-authenticated\"]],\n        features: [i0.ɵɵProvidersFeature([AuthService, AuthGuard, AsyncPipe])],\n        decls: 9,\n        vars: 6,\n        consts: [[1, \"horizontal-menu\"], [3, \"click\"], [1, \"icon\"], [1, \"menu-icon\", 3, \"src\"]],\n        template: function AuthenticatedComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"span\", 0)(1, \"span\");\n            i0.ɵɵtext(2);\n            i0.ɵɵpipe(3, \"async\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"span\", 1);\n            i0.ɵɵlistener(\"click\", function AuthenticatedComponent_Template_span_click_4_listener() {\n              return ctx.logout();\n            });\n            i0.ɵɵelementStart(5, \"span\", 2);\n            i0.ɵɵelement(6, \"img\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"span\", 0);\n            i0.ɵɵtext(8);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate2(\" \", ctx.hitext, \" \", i0.ɵɵpipeBind1(3, 4, ctx.username$), \" \");\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"src\", ctx.logoutpng, i0.ɵɵsanitizeUrl);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.logouttext);\n          }\n        },\n        dependencies: [i2.AsyncPipe],\n        styles: [\"div.horizontal-menu[_nghost-%COMP%]{font-size:10px}.horizontal-menu[_nghost-%COMP%]   .menu-item[_ngcontent-%COMP%]{font-size:12px;padding:3px 15px 3px 8px}.menu-icon[_ngcontent-%COMP%]{height:30px;width:30px;margin:10px}.menu-text[_ngcontent-%COMP%]{font-size:15px}.active[_ngcontent-%COMP%]{outline:none;transform:scale(1.05);background-color:#f73a3acc}.horizontal-menu.in-popup[_nghost-%COMP%]{padding-left:14px}span[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:3px 0 3px 5px;padding:0;background:transparent;border:0}span.dropdown[_ngcontent-%COMP%], span.dropleft[_ngcontent-%COMP%], span.dropright[_ngcontent-%COMP%]{float:right}span.dropdown[_ngcontent-%COMP%] > button.dropdown-toggle[_ngcontent-%COMP%]:after{border-top-color:#fff}span.dropright[_ngcontent-%COMP%] > button.dropdown-toggle[_ngcontent-%COMP%]:after{border-left-color:#fff}span.dropleft[_ngcontent-%COMP%] > button.dropdown-toggle[_ngcontent-%COMP%]:before{border-right-color:#fff}li[_ngcontent-%COMP%]{display:inline}ul[_ngcontent-%COMP%]{float:right;display:inline!important}.horizontal-menu[_nghost-%COMP%]{display:inline-block;max-width:200px;min-width:200px;height:100vh;padding-left:4px;flex-grow:0;background-color:#35858a;overflow-x:hidden;overflow-y:auto}.horizontal-menu[_nghost-%COMP%] > span.icon[_ngcontent-%COMP%]{width:10px;height:10px}div[_ngcontent-%COMP%]{margin-top:20px}\"]\n      });\n    }\n  }\n  return AuthenticatedComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}