{"ast":null,"code":"import _asyncToGenerator from \"C:/tennisclub/WebApplicationTnsClub/WebApplicationTnsClub/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Observable, of, from } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      // this.$username.subscribe(data => { console.log(\"auth!!!dfdf\" + data); authenticated.loginUsername(); });\n      this.http = http;\n      this.username$ = new Observable(); //new BehaviorSubject<string>(null);\n      // isAuthenticated$ = new ReplaySubject(1);\n      //   getUsername() {\n      //      return this.username$;\n      //  }\n      // async _getUser() {\n      //     \n      //      const temp = await this.http.get('/api/user').toPromise();\n      //      this._username = temp['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'];\n      //      this.username$=from(this._username);\n      // \n      //      return temp;\n      //  }\n      this.isAuthenticated$ = new Observable();\n    }\n    setValue(value) {\n      this.username$ = from(value);\n      // this.getValue();\n    }\n    getUser() {\n      console.log(\"getuser auth service\");\n      return this.http.get('/api/user');\n      /*.subscribe(\n          map(data => {\n               this.isAuthenticated$ = of(!!data['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name']);\n              this.username$=( (data['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name']));\n              console.log(\"getuser\" + this.username$);\n          })\n      );*/\n    }\n    isAuthenticated() {\n      return this.isAuthenticated$;\n      //        this.getUser().subscribe(\n      //         map(data => !!data['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'])\n      //     );\n    }\n    //await this.getUser(); console.log(\"getUser\" + this._username);\n    //   async getUsername() {\n    //       await this.getUser().subscribe(\n    //           (data) => { this.username$=data['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'] });\n    //       console.log(\"getusername\" + this.username$);\n    //    return this.username$;\n    //   }\n    //\n    //   async loadUser() {\n    //       console.log(\"loadus\");\n    //\n    //       return await this.http.get('/api/user').pipe(\n    //           map(data =>\n    //           {\n    //                this.username$=(data['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name']);\n    //                console.log(\"getus\" + of(this.username$));\n    //           }\n    //           ));\n    //   }\n    //\n    /**/\n    /*\n        {\n            const user =\n                 .subscribe(user => {\n                    this.user = user;\n                    this.username = user['username'];\n                     console.log(this.user);\n                     console.log(this.username);\n                });\n            return this.user;\n    \n        }*/\n    /*\n    getUser()=> user;\n       const user = await this.http.get<any>(\"/api/user\");//\n        if ('user_id' in user)\n       {\n           this.user = user;console.log(user);\n        }\n       else console.log(\"NO --\"+user);\n        \n        return user;\n    }*/\n    login(loginForm) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        return yield _this.http.post(\"/api/login\", loginForm, {\n          withCredentials: true\n        }).subscribe( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (_) {\n            console.log(\"LOADUSER begin\" + of(_this.username$));\n            yield _this.getUser();\n            console.log(\"LOADUSER end\" + of(_this.username$));\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      })();\n    }\n    register(registerForm) {\n      return this.http.post(\"/api/register\", registerForm, {\n        withCredentials: true\n      });\n      //  .subscribe(_ => { this.loadUser(); });\n    }\n    logout() {\n      //this.username.next(\"\");\n      return this.http.get(\"/api/logout\").subscribe(_ => this.user = null);\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AuthService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}