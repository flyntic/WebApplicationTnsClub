{"ast":null,"code":"import { of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(router, http) {\n      this.router = router;\n      this.http = http;\n      this.isAuthenticated = false;\n      this.url = 'http://localhost:3000/users';\n    }\n    signIn(email, password) {\n      return this.http.get(this.url).pipe(delay(2000), map(response => {\n        const arrayFilter = [] /*= response.json().filter((item: User) =>\n                               item.email === email && item.password === password)*/;\n        if (arrayFilter.length !== 0) {\n          this.isAuthenticated = true;\n          localStorage.setItem('user', JSON.stringify(arrayFilter[0]));\n        } else {\n          throw new Error('Invalid email or password');\n        }\n      }));\n    }\n    signOut() {\n      this.isAuthenticated = false;\n      localStorage.clear();\n      this.router.navigate(['/sign-in']);\n      return of({});\n    }\n    registerUser(registerForm) {\n      return this.http.post(this.url, {\n        name: registerForm.name,\n        email: registerForm.email,\n        password: registerForm.password\n      });\n    }\n    static {\n      this.ɵfac = function UserService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || UserService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: UserService,\n        factory: UserService.ɵfac\n      });\n    }\n  }\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}