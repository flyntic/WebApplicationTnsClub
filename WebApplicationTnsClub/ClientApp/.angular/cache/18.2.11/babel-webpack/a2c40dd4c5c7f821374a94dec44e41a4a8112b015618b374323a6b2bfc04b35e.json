{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/screen.service\";\nexport let ScreenSmallDirective = /*#__PURE__*/(() => {\n  class ScreenSmallDirective {\n    constructor(template, screenService, viewContainer) {\n      this.template = template;\n      this.screenService = screenService;\n      this.viewContainer = viewContainer;\n      this.hasView = false;\n      screenService.resize$.subscribe(() => {\n        this.onResize();\n      });\n    }\n    onResize() {\n      this.screenLarge = false;\n    }\n    ngOnInit() {\n      this.onResize();\n    }\n    set screenLarge(condition) {\n      condition = this.screenService.screenWidth < this.screenService.largePixels;\n      if (condition && !this.hasView) {\n        this.hasView = true;\n        this.viewContainer.createEmbeddedView(this.template);\n      } else if (!condition && this.hasView) {\n        this.hasView = false;\n        this.viewContainer.clear();\n      }\n    }\n    static {\n      this.ɵfac = function ScreenSmallDirective_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ScreenSmallDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i1.ScreenService), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n      };\n    }\n    static {\n      this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n        type: ScreenSmallDirective,\n        selectors: [[\"\", \"screenSmall\", \"\"]],\n        inputs: {\n          screenLarge: \"screenLarge\"\n        }\n      });\n    }\n  }\n  return ScreenSmallDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}