{"ast":null,"code":"import _asyncToGenerator from \"C:/tennisclub/WebApplicationTnsClub/WebApplicationTnsClub/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Observable, of } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//import {  } from 'rxjs';\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      // this.$username.subscribe(data => { console.log(\"auth!!!dfdf\" + data); authenticated.loginUsername(); });\n      this.http = http;\n      this._username = \"\"; // null;\n      this.username$ = new Observable(); //new BehaviorSubject<string>(null);\n      this.isAuthenticated$ = new Observable();\n    }\n    setValue(value) {\n      this.username$ = value;\n      // this.getValue();\n    }\n    // isAuthenticated$ = new ReplaySubject(1);\n    //   getUsername() {\n    //      return this.username$;\n    //  }\n    _getUser() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const temp = yield _this.http.get('/api/user').toPromise();\n        _this._username = temp['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'];\n        _this.username$ = _this._username;\n        return temp;\n      })();\n    }\n    getUser() {\n      return this.http.get('/api/user').pipe(map(data => {\n        this.isAuthenticated$ = of(!!data['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name']);\n        this.username$ = data['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'];\n        console.log(\"getuser\" + this.username$);\n      }));\n    }\n    isAuthenticated() {\n      return this.getUser().pipe(map(data => !!data['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name']));\n    }\n    //await this.getUser(); console.log(\"getUser\" + this._username);\n    getUsername() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        return _this2.username$;\n      })();\n    }\n    loadUser() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        console.log(\"loadus\");\n        return yield _this3.http.get('/api/user').pipe(tap(data => {\n          _this3.username$ = data['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'];\n          console.log(\"getus\" + of(_this3.username$));\n        }));\n      })();\n    }\n    __loadUser() {\n      //  this.user = this.http.get<any>('/api/user').toPromise();\n      //  this.setValue(this.user['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name']);\n      console.log(\"auth !!!\" + this.username$);\n      //.user;// = await  this.user;// \n      return this.getUser(); //this.user; //this.http.get<any>('/api/user');//\n    }\n    //this.user }.toPromise()\n    /**/\n    /*\n        {\n            const user =\n                 .subscribe(user => {\n                    this.user = user;\n                    this.username = user['username'];\n                     console.log(this.user);\n                     console.log(this.username);\n                });\n            return this.user;\n    \n        }*/\n    /*\n    getUser()=> user;\n       const user = await this.http.get<any>(\"/api/user\");//\n        if ('user_id' in user)\n       {\n           this.user = user;console.log(user);\n        }\n       else console.log(\"NO --\"+user);\n        \n        return user;\n    }*/\n    login(loginForm) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        return yield _this4.http.post(\"/api/login\", loginForm, {\n          withCredentials: true\n        }).subscribe( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (_) {\n            console.log(\"LOADUSER begin\" + of(_this4.username$));\n            yield _this4.getUsername();\n            console.log(\"LOADUSER end\" + of(_this4.username$));\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      })();\n    }\n    register(registerForm) {\n      return this.http.post(\"/api/register\", registerForm, {\n        withCredentials: true\n      }).subscribe(_ => {\n        this.loadUser();\n      });\n    }\n    logout() {\n      //this.username.next(\"\");\n      return this.http.get(\"/api/logout\").subscribe(_ => this.user = null);\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AuthService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}