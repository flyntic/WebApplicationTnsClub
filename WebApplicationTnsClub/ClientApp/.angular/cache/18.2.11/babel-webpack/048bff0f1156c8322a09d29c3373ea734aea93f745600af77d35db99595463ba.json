{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n//import { DataService } from './data.service';\nimport { FileService } from './file.service';\nimport { AuthService } from './../authenticated/auth.service';\n//import { RegisterComponent } from './register/register.component';\n//import { LoginComponent } from './login/login.component';\n//import { ProjectsComponent } from './projects/projects.component';\nimport { SpaModule } from '../spa/spa.module';\nimport { appRoutes } from './routes/app.routes';\n//import { AuthGuard } from './../authenticated/auth-guard.service';\nimport { AuthenticatedComponent } from '../authenticated/auth-menus/authenticated/authenticated.component';\nimport { RegisterComponent } from './app.components/register.component/register.component';\nimport { LoginComponent } from './app.components/login.component/login.component';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  imports: [BrowserModule, FormsModule, AppRoutingModule, LoginComponent, HttpClientModule, RegisterComponent, SpaModule, RouterModule.forRoot(appRoutes), AuthenticatedComponent],\n  declarations: [AppComponent],\n  providers: [FileService, HttpClient, AuthService],\n  // регистрация сервисов  AuthGuard, \n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };\n/*\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { UserFormComponent } from './user.component/user-form.component';\nimport { UserCreateComponent } from './user.component/user-create.component';\nimport { UserEditComponent } from   './user.component/user-edit.component';\nimport { NotFoundComponent } from './not-found.component';\n//import { RegisterUserComponent } from './authentication/register-user/register-user.component'\nimport { DataService } from './data.service';\n\n// определение маршрутов\nconst appRoutes: Routes = [\n    { path: '', component: UserListComponent },\n    { path: 'create', component: UserCreateComponent },\n    { path: 'edit/:login', component: UserEditComponent },\n    { path: 'authentication', loadChildren: () => import('./authentication/authentication.module').then(m => m.AuthenticationModule) },\n\n    // { path: 'authentication', component: RegisterUserComponent },// loadChildren: () => import('./authentication/authentication.module').then(m => m.AuthenticationModule) },\n    { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n    imports: [BrowserModule, FormsModule, HttpClientModule, RouterModule.forRoot(appRoutes)],\n    declarations: [AppComponent, UserListComponent, UserCreateComponent, UserEditComponent,\n        UserFormComponent, NotFoundComponent//, RegisterUserComponent\n    ],\n    providers: [DataService], // регистрация сервисов\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n*/","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}