{"ast":null,"code":"import _asyncToGenerator from \"C:/tennisclub/WebApplicationTnsClub/WebApplicationTnsClub/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { of } from 'rxjs';\nimport { ReplaySubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this._username = \"\"; // null;\n      this.$username = new ReplaySubject(1); //new BehaviorSubject<string>(null);\n      this.$username.subscribe(data => {\n        console.log(\"auth!!!\" + data); /*authenticated.loginUsername(); */\n      });\n    }\n    setValue(value) {\n      this.$username.next(value);\n      // this.getValue();\n    }\n    // isAuthenticated$ = new ReplaySubject(1);\n    getUser() {\n      const temp = this.http.get('/api/user').toPromise();\n      this._username = temp['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'];\n      this.$username.next(this._username);\n      return temp;\n    }\n    getUserName() {\n      this.getUser();\n      console.log(\"getUser\" + this._username);\n      return this._username;\n    }\n    loadUser() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        console.log(\"loadus\");\n        return yield _this.http.get('/api/user').pipe(tap(data => {\n          _this.$username.next(data['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name']);\n          console.log(\"getus\" + of(_this.$username));\n        }));\n      })();\n    }\n    __loadUser() {\n      //  this.user = this.http.get<any>('/api/user').toPromise();\n      //  this.setValue(this.user['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name']);\n      console.log(\"auth !!!\" + this.$username);\n      //.user;// = await  this.user;// \n      return this.getUser(); //this.user; //this.http.get<any>('/api/user');//\n    }\n    //this.user }.toPromise()\n    /**/\n    /*\n        {\n            const user =\n                 .subscribe(user => {\n                    this.user = user;\n                    this.username = user['username'];\n                     console.log(this.user);\n                     console.log(this.username);\n                });\n            return this.user;\n    \n        }*/\n    /*\n    getUser()=> user;\n       const user = await this.http.get<any>(\"/api/user\");//\n        if ('user_id' in user)\n       {\n           this.user = user;console.log(user);\n        }\n       else console.log(\"NO --\"+user);\n        \n        return user;\n    }*/\n    login(loginForm) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        return yield _this2.http.post(\"/api/login\", loginForm, {\n          withCredentials: true\n        }).subscribe( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (_) {\n            console.log(\"LOADUSER begin\" + of(_this2.$username));\n            yield _this2.getUser();\n            console.log(\"LOADUSER end\" + of(_this2.$username));\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      })();\n    }\n    register(registerForm) {\n      return this.http.post(\"/api/register\", registerForm, {\n        withCredentials: true\n      }).subscribe(_ => {\n        this.loadUser();\n      });\n    }\n    logout() {\n      //this.username.next(\"\");\n      return this.http.get(\"/api/logout\").subscribe(_ => this.user = null);\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AuthService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}