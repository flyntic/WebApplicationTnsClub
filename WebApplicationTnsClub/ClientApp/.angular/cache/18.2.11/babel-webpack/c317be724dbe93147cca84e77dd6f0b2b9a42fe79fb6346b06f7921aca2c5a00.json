{"ast":null,"code":"import _asyncToGenerator from \"C:/tennisclub/WebApplicationTnsClub/WebApplicationTnsClub/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.isAuthenticated$ = new Observable();\n    }\n    getUser() {\n      console.log(\"getuser auth service\");\n      return this.http.get('/api/user');\n    }\n    isAuthenticated() {\n      return this.isAuthenticated$;\n      //        this.getUser().subscribe(\n      //         map(data => !!data['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'])\n      //     );\n    }\n    login(loginForm) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        return yield _this.http.post(\"/api/login\", loginForm, {\n          withCredentials: false\n        }).subscribe( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (_) {\n            //  console.log(\"LOADUSER begin\" + of(this.username$));\n            //  await this.getUser();\n            console.log(\"LOADUSER end\"); // + of(this.username$));\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      })();\n    }\n    register(registerForm) {\n      return this.http.post(\"/api/register\", registerForm, {\n        withCredentials: true\n      });\n      //  .subscribe(_ => { this.loadUser(); });\n    }\n    logout() {\n      //this.username.next(\"\");\n      return this.http.get(\"/api/logout\").subscribe(_ => this.user = null);\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AuthService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}